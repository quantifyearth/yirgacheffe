# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Publish CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/osgeo/gdal:ubuntu-small-3.11.0
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system
        run: |
          apt-get update -qqy
          apt-get install -y git python3-pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install gdal[numpy]==3.11.0 scikit-image torch "h3==4.0.0b5" mlx
          python -m pip install pylint mypy pytest types-setuptools pytest-cov build twine

      - name: Lint with pylint
        run: python3 -m pylint yirgacheffe

      - name: Test with numpy backend
        run: python3 -m pytest --cov=yirgacheffe -vv

      - name: Test with mlx backend
        env:
          YIRGACHEFFE_BACKEND: MLX
        run: python3 -m pytest --cov=yirgacheffe -vv

      - name: Build pip package
        run: python3 -m build

      - name: Publish with twine
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_TOKEN }}
        run: twine upload dist/*
